{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"c",
				"calendar"
			],
			[
				"C",
				"CONST_GRP1	class"
			],
			[
				"CG",
				"CG2	statement"
			],
			[
				"cg",
				"CG2	statement"
			],
			[
				"m",
				"main	method (main)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "CONST_GRP1.py",
			"settings":
			{
				"buffer_size": 649,
				"line_ending": "Windows"
			}
		},
		{
			"file": "CONST_GRP2.py",
			"settings":
			{
				"buffer_size": 640,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "'''\nCreated on Jul 1, 2014\n\n@author: mrich\n@module: Constants.ConstBaseClass\n'''\n\n\"\"\" DO NOT MODIFY BASE CLASS!!!!! \"\"\"\nclass ConstBaseClass: \n    \"\"\"\n    forbids to overwrite existing variables \n    forbids to add new values if \"_locked\" variable exists\n    \"\"\" \n        \n    def __setattr__(self,name,value):\n        \"\"\" Base Class constructor to prevent changing const vals \"\"\"\n        if(self.__dict__.has_key(\"_locked\")):    \n            raise NameError(\"Class is locked can not add any attributes (%s)\"%name)\n        if self.__dict__.has_key(name):\n            raise NameError(\"Can't rebind const(%s)\"%name)\n        self.__dict__[name]=value\n        \n    def islocked(self):\n        \"\"\" Returns bool of locked status \"\"\"    \n        if(self.__dict__.has_key(\"_locked\")):\n            return True\n        else:\n            return False    \n        \n    def printitems(self):\n        \"\"\" Prints names & values for class consts (excludes _locked)\"\"\"\n        for i in self.__dict__.items():\n            if i[0] != '_locked':\n                print self.__class__.__name__+ '.'+ i[0], '\\t=\\t', i[1]\n        \n        print \"Locked:\", self.islocked()    \n        print '\\n'\n        \n    def items(self):\n        \"\"\" Returns List of (name, value) \"\"\"\n        return self.__dict__.items()\n        \n",
			"file": "ConstBaseClass.py",
			"file_size": 1333,
			"file_write_time": 130488026198709141,
			"settings":
			{
				"buffer_size": 1293,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "'''\nCreated on Jul 1, 2014\n\n@author: mrich\n@module: test\n@parent: \n\nThis is an example of how the constants are imported\nand accessed in an external file\n'''\n\nfrom CONST_GRP1 import *\nfrom CONST_GRP2 import *\n\nCG1 = CONST_GRP1()\n\nprint CG1.items()\nCG1.printitems()\n\nCG2 = CONST_GRP2()\nprint CG2.items()\nCG2.printitems()\n\n",
			"file": "test.py",
			"file_size": 394,
			"file_write_time": 130488026356289141,
			"settings":
			{
				"buffer_size": 321,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"",
				"Bookmarks: Select Next"
			],
			[
				"dis",
				"Package Control: Disable Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"tog f",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"tog me",
				"View: Toggle Menu"
			],
			[
				"syn jso",
				"Set Syntax: JSON"
			],
			[
				"syn xml",
				"Set Syntax: XML"
			],
			[
				"syn py",
				"Set Syntax: Python"
			],
			[
				"tog st",
				"View: Toggle Status Bar"
			],
			[
				"tog",
				"View: Toggle Status Bar"
			],
			[
				"java",
				"Set Syntax: Java"
			],
			[
				"syn c+",
				"Set Syntax: C++"
			],
			[
				"packages",
				"Preferences: Browse Packages"
			],
			[
				"user",
				"Preferences: Settings - User"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"lint",
				"User: Python Flake8 Lint"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"syn jav",
				"Set Syntax: Java"
			],
			[
				"snip",
				"Snippet: #!/usr/bin/env"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"syn",
				"Set Syntax: SQL"
			],
			[
				"syn java",
				"Set Syntax: Java"
			],
			[
				"tog sid",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"syn s",
				"Set Syntax: SQL"
			]
		],
		"width": 536.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/mrich/AppData/Roaming/Sublime Text 2/Packages/User/sublime_jedi.sublime-settings",
		"/C/Users/mrich/AppData/Roaming/Sublime Text 2/Packages/Jedi - Python autocompletion/sublime_jedi.sublime-settings",
		"/C/Users/mrich/Desktop/ST2 Shortcuts.json",
		"/C/Users/mrich/AppData/Roaming/Sublime Text 2/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/mrich/AppData/Roaming/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/C/Users/mrich/AppData/Roaming/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/C/Users/mrich/AppData/Roaming/Sublime Text 2/Packages/SqlBeautifier/SQL Beautifier.sublime-settings",
		"/C/Users/mrich/AppData/Roaming/Sublime Text 2/Packages/Package Control/Package Control.sublime-settings",
		"/C/Users/mrich/AppData/Roaming/Sublime Text 2/Packages/Java/class.sublime-snippet"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"\n    \n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": true,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "CONST_GRP1.py",
					"settings":
					{
						"buffer_size": 649,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "CONST_GRP2.py",
					"settings":
					{
						"buffer_size": 640,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "ConstBaseClass.py",
					"settings":
					{
						"buffer_size": 1293,
						"regions":
						{
						},
						"selection":
						[
							[
								1293,
								1293
							]
						],
						"settings":
						{
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2.0,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5.0,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10.0,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"sublime_auto_complete": true,
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "test.py",
					"settings":
					{
						"buffer_size": 321,
						"regions":
						{
						},
						"selection":
						[
							[
								321,
								321
							]
						],
						"settings":
						{
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2.0,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5.0,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10.0,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"sublime_auto_complete": true,
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 174.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true
}
